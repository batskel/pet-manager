version: '3.8'

services:
  # -----------------------------------------------------------------------------------
  # pet-manager
  # -----------------------------------------------------------------------------------
  pet-manager:
    image: ${PET_MANAGER_REPO}/${PET_MANAGER_IMAGE_NAME}:${PET_MANAGER_IMAGE_VERSION}
    hostname: pet-manager-service
    container_name: pet-manager-service
    restart: always
    ports:
      - ${PET_MANAGER_HOST_HTTP_PORT}:7071
    environment:
      - SPRING_PROFILES_ACTIVE=default

  # -----------------------------------------------------------------------------------
  # zookeeper
  # -----------------------------------------------------------------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.9
    platform: linux/arm64
    hostname: zookeeper
    container_name: zookeeper
    restart: on-failure
    ports:
      - "2181:2181"
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOOKEEPER_CLIENT_PORT: 2181

  # -----------------------------------------------------------------------------------
  # Kafka
  # -----------------------------------------------------------------------------------
  kafka:
    image: confluentinc/cp-kafka:7.0.9
    platform: linux/arm64
    hostname: kafka
    container_name: kafka
    restart: on-failure
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ps aux | grep [k]afka || exit -1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      # Setup custom listeners so that the broker listens on 2 different ports
      # If we have only one - kafka:, then we can access it from another docker container, but not from host
      # If we name it localhost:, then we can access it from host, but cannot from another docker container
      # If we hardcoded an IP, we could have used the same host:port from both within docker and from host
      # That is why we need both. Advertise the respective custom listener ports on different host names
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      # Tell kafka to not authenticate for the custom listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  # ------------------------------------------------------------------------------------------------------------
  # Redpanda - Community Edition
  # ------------------------------------------------------------------------------------------------------------
  console:
    image: docker.redpanda.com/vectorized/console:master-173596f
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
    ports:
      - "9103:8080"
